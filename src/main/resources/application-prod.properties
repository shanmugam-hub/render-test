# Ensure schema creation
# Postgres Configuration (using Heroku Postgres environment variables)
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
# Redis Configuration (using Heroku Redis environment variables)
#spring.data.redis.url=${SPRING_REDIS_URL} 
#spring.data.redis.ssl.enabled=true
# Spring Session specific configuration (optional, defaults are often fine)

server.port =8910
spring.session.store-type=redis
spring.session.redis.namespace=spring:session
spring.session.timeout=30m
# Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# HikariCP connection pool tuning
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.leak-detection-threshold=2000

spring.datasource.url=jdbc:postgresql://db.cbqcajwewupzxpylzzuh.supabase.co:5432/postgres?sslmode=require
spring.datasource.username=postgres
spring.datasource.password=Asdf@1234
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

spring.data.redis.url=rediss://default:AVNS__9bBme3ffMgVxrKlcW8@redis-cache-shan-83a6.d.aivencloud.com:21574
spring.data.redis.ssl.enabled=true

spring.datasource.hikari.pool-name=HikariPool-1
spring.datasource.hikari.register-mbeans=true
logging.level.com.zaxxer.hikari=DEBUG